name: Scan, Tag, and Push Multiple Docker Images

on:
  push:
    branches:
      - main 
      - develop

  workflow_dispatch:
    inputs:
      environment:
        description: 'Specify the environment tag (dev or prod)'
        required: false
        default: 'dev'

jobs:
  scan_and_push_images:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: meraviglioso8
          password: ${{ secrets.DOCKER_PASSWORD }}

      # ———————————————————————————————————————————————
      # Determine ENV_TAG purely from branch (or workflow_dispatch input)
      - name: Determine ENV_TAG
        id: set_env
        run: |
          # strip "refs/heads/" → "main" or "develop"
          branch=${GITHUB_REF#refs/heads/}

          if [[ "${GITHUB_EVENT_NAME}" == "workflow_dispatch" ]]; then
            # respect manual input if provided
            echo "ENV_TAG=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          elif [[ "$branch" == "main" ]]; then
            echo "ENV_TAG=prod" >> $GITHUB_ENV
          else
            echo "ENV_TAG=dev" >> $GITHUB_ENV
          fi

          echo "⟶ running on branch '$branch', ENV_TAG=${ENV_TAG}"

      # ———————————————————————————————————————————————
      # Install Trivy
      - name: Install Trivy
        run: |
          curl -sfL \
            https://github.com/aquasecurity/trivy/releases/download/v0.22.0/trivy_0.22.0_Linux-64bit.deb \
            -o trivy.deb
          sudo dpkg -i trivy.deb

      # lower rate‐limit errors when scanning docker images
      - name: Set GitHub Token for Trivy
        run: |
          echo "${{ secrets.GH_TOKEN }}" > ~/.github_token
          export GITHUB_TOKEN=$(<~/.github_token)

      # prepare your list of images
      - name: Define Docker images
        run: |
          echo "IMAGES=(
            rabbitmq
            postgres
            watchtower
            go-coffeeshop-product
            go-coffeeshop-counter
            go-coffeeshop-kitchen
            go-coffeeshop-barista
            go-coffeeshop-proxy
            go-coffeeshop-web
          )" >> $GITHUB_ENV

      # ———————————————————————————————————————————————
      # Pull, scan, tag & push
      - name: Pull, Scan, Tag, and Push Docker Images
        run: |
          for img in "${IMAGES[@]}"; do
            full="${DOCKER_USERNAME:-meraviglioso8}/$img"
            echo "→ Processing $full"

            docker pull $full

            # run Trivy but don’t fail the whole job on a finding
            trivy image --no-progress --exit-code 1 $full || true

            SHORT=$(git rev-parse --short HEAD)
            TAG="${ENV_TAG}-${SHORT}"
            docker tag  $full $full:$TAG
            docker push $full:$TAG

            docker tag  $full $full:${ENV_TAG}-latest
            docker push $full:${ENV_TAG}-latest
          done

      # ———————————————————————————————————————————————
      - name: Upload Trivy Scan Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-report
          path: trivy-scan-report.txt
