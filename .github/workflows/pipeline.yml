name: Scan, Tag, and Push Multiple Docker Images

on:
  push:
    branches:
      - main
      - develop

  workflow_dispatch:
    inputs:
      environment:
        description: 'Specify the environment tag (dev or prod)'
        required: false
        default: 'dev'

jobs:
  scan_and_push_images:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: meraviglioso8

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Determine ENV_TAG
        id: set_env
        run: |
          branch=${GITHUB_REF#refs/heads/}
          if [[ "${GITHUB_EVENT_NAME}" == "workflow_dispatch" ]]; then
            echo "ENV_TAG=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          elif [[ "$branch" == "main" ]]; then
            echo "ENV_TAG=prod" >> $GITHUB_ENV
          else
            echo "ENV_TAG=dev" >> $GITHUB_ENV
          fi
          echo "ENV_TAG is $ENV_TAG"

      - name: Install Trivy
        run: |
          curl -sfL \
            https://github.com/aquasecurity/trivy/releases/download/v0.22.0/trivy_0.22.0_Linux-64bit.deb \
            -o trivy.deb
          sudo dpkg -i trivy.deb

      - name: Set GitHub Token for Trivy
        run: |
          echo "${{ secrets.GH_TOKEN }}" > ~/.github_token
          export GITHUB_TOKEN=$(<~/.github_token)

      - name: Pull, Scan, Tag, and Push Docker Images
        run: |
          images=(
            rabbitmq
            postgres
            watchtower
            go-coffeeshop-product
            go-coffeeshop-counter
            go-coffeeshop-kitchen
            go-coffeeshop-barista
            go-coffeeshop-proxy
            go-coffeeshop-web
          )

          for img in "${images[@]}"; do
            full_image="${DOCKER_USERNAME}/${img}"
            echo "Processing ${full_image}"

            docker pull "${full_image}"

            trivy image --no-progress --exit-code 1 "${full_image}" || true

            short_sha=$(git rev-parse --short HEAD)
            image_tag="${ENV_TAG}-${short_sha}"
            docker tag "${full_image}" "${full_image}:${image_tag}"
            docker push "${full_image}:${image_tag}"

            docker tag "${full_image}" "${full_image}:${ENV_TAG}-latest"
            docker push "${full_image}:${ENV_TAG}-latest"
          done

      - name: Upload Trivy Scan Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-report
          path: trivy-scan-report.txt
